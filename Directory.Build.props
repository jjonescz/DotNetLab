<Project>
  <PropertyGroup>
    <TargetFramework>net10.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>DotNetLab</RootNamespace>
    <AssemblyName>DotNetLab.$([System.IO.Path]::GetFileName(`$(MSBuildProjectDirectory)`))</AssemblyName>
    <TestingPlatformShowTestsFailure>true</TestingPlatformShowTestsFailure>
    <Features>$(Features);use-roslyn-tokenizer=true</Features>
    <CompressionEnabled>false</CompressionEnabled>
    <LangVersion>preview</LangVersion>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <UseArtifactsOutput>true</UseArtifactsOutput>

    <!--
        Needed to get diagnostics inside XML doc comments.
    -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1573;1591;0419</NoWarn>

    <!--
      Cannot trim because we dynamically execute programs
      which might depend on methods unreferenced at compile time.
    -->
    <PublishTrimmed>false</PublishTrimmed>

    <EnableDiagnostics>true</EnableDiagnostics>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Net.Compilers.Toolset">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Roslyn.Diagnostics.Analyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Using Include="System.Diagnostics" />
    <Using Include="System.Diagnostics.CodeAnalysis" />
    <Using Include="System.Collections.Immutable" />
    <Using Include="System.Globalization" />
    <Using Include="System.Net" />
    <Using Include="System.Reflection" />
    <Using Include="System.Text" />
    <Using Include="System.Text.RegularExpressions" />
  </ItemGroup>
</Project>
