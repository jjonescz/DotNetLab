<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Blazored.LocalStorage" />
    <PackageReference Include="BlazorMonaco" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.CodeStyle" PrivateAssets="all" IncludeAssets="none" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components" />
    <PackageReference Include="Microsoft.FluentUI.AspNetCore.Components.Icons" />
    <PackageReference Include="Microsoft.Net.Compilers.Razor.Toolset" GeneratePathProperty="true">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="protobuf-net" />
    <PackageReference Include="System.IO.Hashing" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\eng\BuildTools\BuildTools.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\Worker\Worker.csproj" />
  </ItemGroup>

  <!--
    @(Reference) items from other projects are not transitively included in the published output,
    so we include them here manually. https://github.com/dotnet/runtime/issues/112405
  -->
  <ItemGroup>
    <Reference Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CodeStyle.dll" />
    <Reference Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.CodeStyle.dll" />
    <Reference Include="$(PkgMicrosoft_Net_Compilers_Razor_Toolset)\source-generators\Microsoft.CodeAnalysis.Razor.Compiler.dll" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="..\..\eng\BuildTools\snapshots\*" LinkBase="snapshots" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Microsoft.AspNetCore.Components" />
  </ItemGroup>

  <ItemGroup>
    <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
  </ItemGroup>

  <ItemGroup>
    <NpmInput Include="Npm\**" Exclude="Npm\node_modules\**;Npm\package-lock.json" />
    <NpmOutput Include="wwwroot\js\jslib.js" />

    <!-- Mark as Content so it's included in `service-worker-assets.js`. -->
    <None Remove="@(NpmOutput)" />
    <Content Remove="@(NpmOutput)" />
    <Content Include="@(NpmOutput)" />
  </ItemGroup>

  <Target Name="NpmBuild" BeforeTargets="PreBuildEvent" Inputs="@(NpmInput)" Outputs="@(NpmOutput)">
    <Exec Command="npm install" WorkingDirectory="Npm" />
    <Exec Command="npm run build" WorkingDirectory="Npm" />
    <!--
      Ensure the outputs are modified (even if Webpack did not touch them
      because the input changes were irrelevant to build output)
      so this target does not re-run unnecessarily.
    -->
    <Touch Files="@(NpmOutput)" AlwaysCreate="true" />
  </Target>

  <Import Project="..\..\eng\CopyDotNetDTs.targets" />

</Project>
